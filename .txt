import React, { useState, useEffect } from "react";
import axios from "axios";
import Stories1AskAdvisor from '../components/Stories1AskAdvisor';
import Stories2FindSchool from '../components/Stories2FindSchool';

const Stories = () => {
  const [stories, setStories] = useState([]);
  const [category, setCategory] = useState("");
  const [tag, setTag] = useState("");
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchStories = async () => {
      try {
        const { data } = await axios.get(`/api/stories`, {
          params: { category, tags: tag },
        });
        console.log('Fetched stories:', data);
        if (data.success) {
          setStories(data.stories);
        } else {
          setError(data.message || 'Failed to fetch stories');
        }
      } catch (error) {
        console.error('Error fetching stories:', error);
        setError('An error occurred while fetching stories.');
      }
    };

    fetchStories();
  }, [category, tag]);

  // Add styles for story content
  useEffect(() => {
    const style = document.createElement('style');
    style.textContent = `
      .story-content {
        font-size: 1.125rem;
        line-height: 1.75;
        color: #4B5563; /* Consistent text color */
      }
      
      /* Headers */
      .story-content h1 {
        font-size: 2.5rem;
        margin-bottom: 1.5rem;
        color: #2A3342;
        font-family: serif;
      }
      
      .story-content h2 {
        font-size: 2rem;
        margin-bottom: 1.25rem;
        color: #2A3342;
        font-family: serif;
      }
      
      .story-content h3 {
        font-size: 1.75rem;
        margin-bottom: 1rem;
        color: #2A3342;
        font-family: serif;
      }
      
      /* Paragraphs and spacing */
      .story-content p {
        margin-bottom: 1.5rem;
        color: #4B5563;
      }
      
      /* Lists */
      .story-content ul, .story-content ol {
        margin-bottom: 1.5rem;
        padding-left: 2rem;
      }
      
      .story-content li {
        margin-bottom: 0.5rem;
        color: #4B5563;
      }
      
      /* Links */
      .story-content a {
        color: #2A3342;
        text-decoration: underline;
        text-decoration-color: #F37021;
        text-underline-offset: 2px;
      }
      
      .story-content a:hover {
        color: #F37021;
        transition: color 0.3s ease;
      }
      
      /* Images */
      .story-content img {
        margin: 50px auto;
        max-width: calc(100% - 100px);
        height: auto;
        display: block;
        border-radius: 8px;
      }
      
      /* Blockquotes */
      .story-content blockquote {
        border-left: 4px solid #F37021;
        padding-left: 1rem;
        margin-left: 0;
        margin-right: 0;
        margin-bottom: 1.5rem;
        font-style: italic;
        color: #6B7280;
      }
      
      /* Tables */
      .story-content table {
        width: 100%;
        margin-bottom: 1.5rem;
        border-collapse: collapse;
      }
      
      .story-content table td,
      .story-content table th {
        border: 1px solid #E5E7EB;
        padding: 0.75rem;
      }
      
      .story-content table th {
        background-color: #F9FAFB;
        color: #2A3342;
      }
      
      /* Code blocks */
      .story-content pre {
        background-color: #F9FAFB;
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1.5rem;
        overflow-x: auto;
      }
      
      .story-content code {
        font-family: monospace;
        color: #2A3342;
      }
    `;
    document.head.appendChild(style);

    return () => {
      document.head.removeChild(style);
    };
  }, []);

  return (
    <div className="bg-gray-50">
      {/* Filters */}
      <div className="max-w-6xl mx-auto p-4 space-y-4">
        <div className="flex gap-4">
          <select 
            onChange={(e) => setCategory(e.target.value)}
            className="px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-black"
          >
            <option value="">Filter by Category</option>
            <option value="News">News</option>
            <option value="University">University</option>
            <option value="Students">Students</option>
            <option value="Study in US">Study in US</option>
          </select>
          <input
            type="text"
            placeholder="Filter by Tag"
            onChange={(e) => setTag(e.target.value)}
            className="px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-black"
          />
        </div>

        {/* Stories List */}
        {error && <div className="text-red-500">{error}</div>}
        {Array.isArray(stories) && stories.length > 0 ? (
          stories.map((story) => (
            <div key={story._id} className="bg-white">
              <div className="max-w-6xl mx-auto">
                {/* Title and Image Grid Layout */}
                <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 items-start">
                  {/* Left side - Title and Content */}
                  <div>
                    <h1 className="text-[52px] leading-tight font-serif text-[#2A3342] mb-4">
                      {story.title}
                    </h1>

                    {/* Tags and Social Icons */}
                    <div className="flex flex-wrap gap-3 mb-4">
                      {story.tags.map((tag, index) => (
                        <span 
                          key={index}
                          className="px-4 py-2 bg-gray-50 text-gray-700 rounded-full text-sm border border-gray-200 hover:bg-gray-100 transition-colors"
                        >
                          {tag}
                        </span>
                      ))}
                      
                      {/* Social Icons */}
                      <div className="flex gap-2 ml-2">
                        <button className="p-2 rounded-full bg-gray-100 hover:bg-gray-200">
                          <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z"/>
                          </svg>
                        </button>
                        <button className="p-2 rounded-full bg-gray-100 hover:bg-gray-200">
                          <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M19 3a2 2 0 012 2v14a2 2 0 01-2 2H5a2 2 0 01-2-2V5a2 2 0 012-2h14m-.5 15.5v-5.3a3.26 3.26 0 00-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 1.39-1.4a1.4 1.4 0 011.4 1.4v4.93h2.79M6.88 8.56a1.68 1.68 0 001.68-1.68c0-.93-.75-1.69-1.68-1.69a1.69 1.69 0 00-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37h2.77z"/>
                          </svg>
                        </button>
                      </div>
                    </div>

                    {/* Help Text and Button */}
                    <div className="border-t border-gray-200 pt-4">
                      <div className="flex items-center justify-between">
                        <p className="text-gray-700 text-lg">
                          Let us help you find your best fit university!
                        </p>
                        <button className="bg-[#F37021] text-white px-6 py-2 rounded-full hover:bg-[#e85d0a] transition-colors whitespace-nowrap">
                          Find your school
                        </button>
                      </div>
                      <div className="border-t border-gray-200 mt-4"></div>
                    </div>

                    {/* Author and Date */}
                    <div className="mt-4 mb-4">
                      <div className="text-gray-700">
                        By <span className="text-[#2A3342] font-semibold text-lg">{story.author.name}</span>
                      </div>
                      <div className="text-gray-700">
                        Published on {new Date(story.createdAt).toLocaleDateString('en-US', {
                          month: 'long',
                          day: 'numeric',
                          year: 'numeric'
                        })}
                      </div>
                    </div>

                    {/* Subtitle */}
                    <div className="text-lg text-gray-700 mb-4 leading-relaxed">
                      {story.subtitle}
                    </div>
                  </div>

                  {/* Right side - Image */}
                  <div>
                    {story.photo && (
                      <div className="relative h-[265px]">
                        <img 
                          src={story.photo.url} 
                          alt={story.title}
                          className="w-full h-full object-cover rounded-lg"
                        />
                      </div>
                    )}
                  </div>
                </div>

                {/* Content and Sidebar Grid */}
                <div className="grid grid-cols-1 lg:grid-cols-3 gap-4 mt-4">
                  {/* Main Content */}
                  <div className="lg:col-span-2">
                    <div className="prose max-w-none">
                      <div className="w-full mt-4">
                        <Stories1AskAdvisor />
                      </div>
                      <div 
                        dangerouslySetInnerHTML={{ __html: story.content }} 
                        className="story-content"
                      />
                    </div>
                  </div>

                  {/* Sidebar */}
                  <div className="lg:col-span-1">
                    <div className="sticky top-4">
                      <Stories2FindSchool />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))
        ) : (
          <div>No stories found.</div>
        )}
      </div>
    </div>
  );
};

export default Stories;
 {/* Sidebar */}
          <div className="lg:col-span-1">
            <div className="sticky top-4">
              <Stories2FindSchool />
            </div>
          </div>